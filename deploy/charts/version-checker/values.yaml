# Default values for version-checker.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# -- Replica Count for version-checker
replicaCount: 1

#  -- Additional Labels to apply to Service and Deployment/Pod Objects
additionalLabels: {}
#  -- Additional Annotations to apply to Service and Deployment/Pod Objects
additionalAnnotations: {}

image:
  repository: quay.io/jetstack/version-checker
  # -- Override the chart version
  tag:
  # -- Set the Image Pull Policy
  pullPolicy: IfNotPresent

# -- Configure version-checkers Service
service:
  labels: {}
  annotations: {}
  # -- Port to expose within the service
  port: 8080

# -- Configure version-checkers behaviour
versionChecker:
  # versionChecker.imageCacheTimeout -- How long to hold on to image tags and their versions
  imageCacheTimeout: 30m
  # versionChecker.logLevel -- Configure version-checkers logging, valid options are: debug, info, warn, error, fatal, panic
  logLevel: info
  # versionChecker.metricsServingAddress -- Port/interface to which version-checker should bind too
  metricsServingAddress: 0.0.0.0:8080
  # versionChecker.testAllContainers -- Enable/Disable the requirement for an enable.version-checker.io annotation on pods.
  testAllContainers: true

# -- Azure Container Registry Credentials Configuration
acr:
  # acr.username -- (string)
  username:
  # acr.password -- (string)
  password:
  # acr.refreshToken -- (string)
  refreshToken:

# Docker Hub Credentials Configuration
docker:
  # docker.username -- (string)
  username:
  # docker.password -- (string)
  password:
  # docker.token -- (string)
  token:

# Amazon Elastic Container Registry Credentials Configuration
ecr:
  # -- (string) Provide AWS EKS Iam Role ARN following: [Specify A ServiceAccount Role](https://docs.aws.amazon.com/eks/latest/userguide/specify-service-account-role.html)
  iamRoleArn:

  # -- (string)
  accessKeyID:
  # -- (string)
  secretAccessKey:
  # -- (string)
  sessionToken:

# Google Container Registry Credentials Configuration
gcr:
  # gcr.token -- (string)
  token:

# Google Artifact Registry Credentials Configuration
ghcr:
  # ghcr.token -- (string)
  token:

# Quay.io Registry Credentials Configuration
quay:
  # quay.token -- (string)
  token:

# -- Can be used to provide custom environment variables e.g. proxy settings
env: {}

# -- ([]{name: "", host: "", username:"", password:"", token:""}]) Setup a number of SelfHosted Repositories and their credentials
selfhosted:
  []
  #- name: REGISTRY
  #  host: http://registry:5000
  #  username:
  #  password:
  #  token:
  #- name: EXAMPLE
  #  host: https://artifactory.example.com
  #  username: foo
  #  password: bar
  #  token:

# -- Setup version-checkers resource requests/limits
resources:
  {}
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi
  #

# -- Configure the readiness probe for version-checker
readinessProbe:
  # readinessProbe.enabled -- Enable/Disable the setting of a readinessProbe
  enabled: true
  httpGet:
    path: /readyz
    port: 8080
  initialDelaySeconds: 3
  periodSeconds: 3

# -- Configure the healthcheck probe for version-checker
livenessProbe:
  # livenessProbe.enabled -- Enable/Disable the setting of a livenessProbe
  enabled: true
  httpGet:
    path: /readyz
    port: 8080
  initialDelaySeconds: 3
  periodSeconds: 3

# -- Prometheus Operator
prometheus:
  # -- Deploy a Prometheus-Operator Prometheus Object to collect version-checker metrics
  enabled: false
  replicas: 1
  # -- ServiceAccount for new Prometheus Object
  serviceAccountName: prometheus

# -- Configure a Prometheus-Operator ServiceMonitor object
serviceMonitor:
  # serviceMonitor.enabled -- Disable/Enable ServiceMonitor Object
  enabled: false
  additionalLabels: {}
