{{ $chartname := include "version-checker.name" . }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $chartname }}
  labels:
    {{- include "version-checker.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "version-checker.selector" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "version-checker.labels" . | nindent 8 }}
        {{- if .Values.additionalLabels }}
          {{ toYaml .Values.additionalLabels | nindent 8 }}
        {{- end }}
      annotations:
        prometheus.io/path: "/metrics"
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        enable.version-checker.io/{{ $chartname }}: "true"
        {{- if .Values.additionalAnnotations }}
        {{ toYaml .Values.additionalAnnotations | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ $chartname }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | trim | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
      - name: {{ $chartname }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
        - name: metrics
          containerPort: 8080
        args:
        {{- include "version-checker.pod.args" . | nindent 8 }}
        resources:
          {{- toYaml .Values.resources | nindent 12 }}
        {{- with .Values.securityContext }}
        securityContext:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- if .Values.livenessProbe.enabled }}
        livenessProbe:
          {{- omit .Values.livenessProbe "enabled" | toYaml | nindent 10}}
        {{- end }}
        {{- if .Values.readinessProbe.enabled }}
        readinessProbe:
          {{- omit .Values.readinessProbe "enabled" | toYaml | nindent 10}}
        {{- end }}
        {{- if not (empty .Values.existingSecret) }}
        envFrom:
          - secretRef:
              name: {{.Values.existingSecret}}
        {{- end }}
        env:
        {{ include "version-checker.pod.envs.acr" . | nindent 8 }}
        {{ include "version-checker.pod.envs.ecr" . | nindent 8 }}
        {{ include "version-checker.pod.envs.docker" . | nindent 6 }}
        {{- include "version-checker.pod.envs.gcr" . | nindent 8 }}
        {{- include "version-checker.pod.envs.ghcr" . | nindent 8 }}
        {{- include "version-checker.pod.envs.quay" . | nindent 8 }}
        {{- include "version-checker.pod.envs.selfhosted" . | nindent 6 }}
          # Extra Envs
        {{- if .Values.env }}
          {{- toYaml .Values.env | nindent 10 }}
        {{- end }}
        {{- with .Values.extraVolumeMounts }}
        volumeMounts:
          {{- toYaml . | nindent 10 }}
        {{- end }}
      {{- with .Values.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        {{- include "version-checker.pod.volumes" . | nindent 8 }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.topologySpreadConstraints }}
      topologySpreadConstraints:
        {{- toYaml . | nindent 8 }}
      {{- end }}
